{"ast":null,"code":"var _jsxFileName = \"/Users/Aashiq/Desktop/Projects/HangManButNo/src/Main.jsx\",\n  _s = $RefreshSig$();\nimport { languages } from './languages.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [LanguagesObjectArray, setLanguages] = React.useState(languages);\n  const [CurrentWord, setCurrentWord] = React.useState(\"React\".toLowerCase());\n  const [GuessedArray, setGuessed] = React.useState([]);\n  const [CorrectLetters, setCorrectLetters] = React.useState([]);\n  const [IncorrectGuessCount, setIncorrectGuessCount] = React.useState(0);\n  const [IsGameOver, setGameOver] = React.useState(false);\n  const SplitCurrentWord = CurrentWord.split(\"\");\n  const AlphabetArray = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n  console.log(\"Incorrect Guesses:\", IncorrectGuessCount);\n  function HandleLetterButtonClick(Letter) {\n    setGuessed(prevGuessed => {\n      if (prevGuessed.includes(Letter)) return prevGuessed;\n      const newGuessed = [...prevGuessed, Letter];\n      CompareGuessed(newGuessed);\n      return newGuessed;\n    });\n  }\n  function CompareGuessed(updatedGuessedArray) {\n    setCorrectLetters(prevCorr => {\n      const newCorrectLetters = SplitCurrentWord.filter(letter => updatedGuessedArray.includes(letter));\n      return [...new Set([...prevCorr, ...newCorrectLetters])];\n    });\n  }\n  React.useEffect(() => {\n    setIncorrectGuessCount(GuessedArray.length - CorrectLetters.length);\n  }, [GuessedArray, CorrectLetters]);\n  React.useEffect(() => {\n    if (IncorrectGuessCount > 0) {\n      setLanguages(prevLang => prevLang.slice(1));\n    }\n  }, [IncorrectGuessCount]);\n  const WordDisplay = SplitCurrentWord.map((prevWord, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"Letters\",\n    children: CorrectLetters.includes(prevWord) ? prevWord.toUpperCase() : \"\"\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this));\n  const AlphabetButtons = AlphabetArray.map(preAlph => /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      backgroundColor: CorrectLetters.includes(preAlph) ? \"rgb(54, 167, 54)\" : GuessedArray.includes(preAlph) ? \"#D02B2B\" : \"\"\n    },\n    onClick: () => HandleLetterButtonClick(preAlph),\n    className: \"AlphabetLetters\",\n    children: preAlph.toUpperCase()\n  }, preAlph, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this));\n  const LanguagesDisplay = LanguagesObjectArray.map(prevLang => /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"Languages\",\n    style: {\n      backgroundColor: prevLang.backgroundColor,\n      color: prevLang.color\n    },\n    children: prevLang.name\n  }, prevLang.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameResultStatus\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You Win!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDF89Congratulations\\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LanguagesCollection\",\n      children: LanguagesDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WordToGuess\",\n      children: WordDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AlphabetButtons\",\n      children: AlphabetButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"NewGameButton\",\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"2ATpJ6EKqpBY6rO38WweUPJYkII=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["languages","React","jsxDEV","_jsxDEV","Main","_s","LanguagesObjectArray","setLanguages","useState","CurrentWord","setCurrentWord","toLowerCase","GuessedArray","setGuessed","CorrectLetters","setCorrectLetters","IncorrectGuessCount","setIncorrectGuessCount","IsGameOver","setGameOver","SplitCurrentWord","split","AlphabetArray","console","log","HandleLetterButtonClick","Letter","prevGuessed","includes","newGuessed","CompareGuessed","updatedGuessedArray","prevCorr","newCorrectLetters","filter","letter","Set","useEffect","length","prevLang","slice","WordDisplay","map","prevWord","index","className","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","AlphabetButtons","preAlph","style","backgroundColor","onClick","LanguagesDisplay","color","name","_c","$RefreshReg$"],"sources":["/Users/Aashiq/Desktop/Projects/HangManButNo/src/Main.jsx"],"sourcesContent":["import { languages } from './languages.js';\nimport React from 'react'\n\nexport default function Main() {\n\n    const [LanguagesObjectArray, setLanguages] = React.useState(languages);\n    const [CurrentWord, setCurrentWord] = React.useState(\"React\".toLowerCase());\n    const [GuessedArray, setGuessed] = React.useState([]);\n    const [CorrectLetters, setCorrectLetters] = React.useState([]);\n    const [IncorrectGuessCount, setIncorrectGuessCount] = React.useState(0);\n    const [IsGameOver, setGameOver] = React.useState(false)\n\n    const SplitCurrentWord = CurrentWord.split(\"\");\n    const AlphabetArray = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n\n    console.log(\"Incorrect Guesses:\", IncorrectGuessCount);\n\n    function HandleLetterButtonClick(Letter) {\n        setGuessed(prevGuessed => {\n            if (prevGuessed.includes(Letter)) return prevGuessed;\n            \n            const newGuessed = [...prevGuessed, Letter];\n            CompareGuessed(newGuessed);\n            return newGuessed;\n        });\n    }\n\n    function CompareGuessed(updatedGuessedArray) {\n        setCorrectLetters(prevCorr => {\n            const newCorrectLetters = SplitCurrentWord.filter(letter => updatedGuessedArray.includes(letter));\n            return [...new Set([...prevCorr, ...newCorrectLetters])];\n        });\n    }\n\n    React.useEffect(() => {\n        setIncorrectGuessCount(GuessedArray.length - CorrectLetters.length);\n    }, [GuessedArray, CorrectLetters]);\n\n    React.useEffect(() => {\n        if (IncorrectGuessCount > 0) {\n            setLanguages(prevLang => prevLang.slice(1));\n        }\n    }, [IncorrectGuessCount]);\n\n    const WordDisplay = SplitCurrentWord.map((prevWord, index) => (\n        <span key={index} className='Letters'>\n            {CorrectLetters.includes(prevWord) ? prevWord.toUpperCase() : \"\"}\n        </span>\n    ));\n\n    const AlphabetButtons = AlphabetArray.map(preAlph => (\n        <button \n            key={preAlph} \n            style={{\n                backgroundColor: CorrectLetters.includes(preAlph) \n                    ? \"rgb(54, 167, 54)\" \n                    : GuessedArray.includes(preAlph) \n                        ? \"#D02B2B\" \n                        : \"\"\n            }} \n            onClick={() => HandleLetterButtonClick(preAlph)} \n            className='AlphabetLetters'\n        >\n            {preAlph.toUpperCase()}\n        </button>\n    ));\n\n    const LanguagesDisplay = LanguagesObjectArray.map(prevLang => (\n        <h2 \n            key={prevLang.name} \n            className=\"Languages\" \n            style={{ backgroundColor: prevLang.backgroundColor, color: prevLang.color }}\n        >\n            {prevLang.name}\n        </h2>\n    ));\n\n    return (\n        <main>\n            <div className=\"GameResultStatus\">\n                <h2>You Win!</h2>\n                <p>ðŸŽ‰CongratulationsðŸŽ‰</p>\n            </div>\n            <div className=\"LanguagesCollection\">\n                {LanguagesDisplay}\n            </div>\n            <div className='WordToGuess'>\n                {WordDisplay}\n            </div>\n            <div className='AlphabetButtons'>\n                {AlphabetButtons}\n            </div>\n            <button className='NewGameButton'>New Game</button>\n        </main>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}