{"ast":null,"code":"var _jsxFileName = \"/Users/Aashiq/Desktop/Projects/HangManButNo/src/Main.jsx\",\n  _s = $RefreshSig$();\nimport { languages } from './languages.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [LanguagesObjectArray, setLanguages] = React.useState(languages);\n  const [CurrentWord, setCurrentWord] = React.useState(\"React\");\n  const SplitCurrentWord = CurrentWord.split(\"\");\n  const AlphabetArray = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n  const WordDisplay = SplitCurrentWord.map(prevWord => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Letters\",\n      children: prevWord.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  });\n  const AlphabetButtons = AlphabetArray.map(preAlph => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      children: preAlph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  });\n  const LanguagesDisplay = LanguagesObjectArray.map(prevLang => {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Languages\",\n      style: {\n        backgroundColor: prevLang.backgroundColor,\n        color: prevLang.color\n      },\n      children: prevLang.name\n    }, prevLang.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameResultStatus\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You Win!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDF89Congratulations\\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LanguagesCollection\",\n      children: LanguagesDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WordToGuess\",\n      children: WordDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: AlphabetButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"cu7dIbL41JGMe6w2mLidSAKysfY=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["languages","React","jsxDEV","_jsxDEV","Main","_s","LanguagesObjectArray","setLanguages","useState","CurrentWord","setCurrentWord","SplitCurrentWord","split","AlphabetArray","WordDisplay","map","prevWord","className","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","AlphabetButtons","preAlph","LanguagesDisplay","prevLang","style","backgroundColor","color","name","_c","$RefreshReg$"],"sources":["/Users/Aashiq/Desktop/Projects/HangManButNo/src/Main.jsx"],"sourcesContent":["import { languages } from './languages.js';\nimport React from 'react'\n\nexport default function Main(){\n\nconst [LanguagesObjectArray, setLanguages] = React.useState(languages)\nconst [CurrentWord, setCurrentWord] = React.useState(\"React\")\n\nconst SplitCurrentWord = CurrentWord.split(\"\");\nconst AlphabetArray = \"abcdefghijklmnopqrstuvwxyz\".split(\"\")\n\n\nconst WordDisplay = SplitCurrentWord.map(prevWord => {\n    return <span className='Letters'>{prevWord.toUpperCase()}</span>\n})\n\nconst AlphabetButtons = AlphabetArray.map(preAlph => {\n    return <button>{preAlph}</button>\n})\n\nconst LanguagesDisplay = LanguagesObjectArray.map(prevLang => {\n    return <h2 className=\"Languages\" key={prevLang.name} style={{backgroundColor: prevLang.backgroundColor, color: prevLang.color}}>{prevLang.name}</h2>\n})\n\n    return(\n        <main>\n            <div className=\"GameResultStatus\">\n                <h2>You Win!</h2>\n                <p>ðŸŽ‰CongratulationsðŸŽ‰</p>\n            </div>\n            <div className=\"LanguagesCollection\">\n                {LanguagesDisplay}\n            </div>\n            <div className='WordToGuess'>\n                {WordDisplay}\n            </div>\n            <div>\n                {AlphabetButtons}\n            </div>\n        </main>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAE9B,MAAM,CAACC,oBAAoB,EAAEC,YAAY,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAACR,SAAS,CAAC;EACtE,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGT,KAAK,CAACO,QAAQ,CAAC,OAAO,CAAC;EAE7D,MAAMG,gBAAgB,GAAGF,WAAW,CAACG,KAAK,CAAC,EAAE,CAAC;EAC9C,MAAMC,aAAa,GAAG,4BAA4B,CAACD,KAAK,CAAC,EAAE,CAAC;EAG5D,MAAME,WAAW,GAAGH,gBAAgB,CAACI,GAAG,CAACC,QAAQ,IAAI;IACjD,oBAAOb,OAAA;MAAMc,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEF,QAAQ,CAACG,WAAW,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EACpE,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGX,aAAa,CAACE,GAAG,CAACU,OAAO,IAAI;IACjD,oBAAOtB,OAAA;MAAAe,QAAA,EAASO;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EACrC,CAAC,CAAC;EAEF,MAAMG,gBAAgB,GAAGpB,oBAAoB,CAACS,GAAG,CAACY,QAAQ,IAAI;IAC1D,oBAAOxB,OAAA;MAAIc,SAAS,EAAC,WAAW;MAAqBW,KAAK,EAAE;QAACC,eAAe,EAAEF,QAAQ,CAACE,eAAe;QAAEC,KAAK,EAAEH,QAAQ,CAACG;MAAK,CAAE;MAAAZ,QAAA,EAAES,QAAQ,CAACI;IAAI,GAAxGJ,QAAQ,CAACI,IAAI;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgG,CAAC;EACxJ,CAAC,CAAC;EAEE,oBACIpB,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAKc,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7Bf,OAAA;QAAAe,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBpB,OAAA;QAAAe,QAAA,EAAG;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACNpB,OAAA;MAAKc,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAC/BQ;IAAgB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACNpB,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAC,QAAA,EACvBJ;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACNpB,OAAA;MAAAe,QAAA,EACKM;IAAe;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAAClB,EAAA,CAtCuBD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}