{"ast":null,"code":"var _jsxFileName = \"/Users/Aashiq/Desktop/Projects/HangManButNo/src/Main.jsx\",\n  _s = $RefreshSig$();\nimport { languages } from './languages.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [LanguagesObjectArray, setLanguages] = React.useState(languages);\n  const [CurrentWord, setCurrentWord] = React.useState(\"React\");\n  const [GuessedArray, setGuessed] = React.useState([]);\n  const [CorrectLetters, setCorrectLetters] = React.useState([]);\n  const SplitCurrentWord = CurrentWord.split(\"\");\n  const AlphabetArray = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n  console.log(GuessedArray);\n  function HandleLetterButtonClick(Letter) {\n    setGuessed(prevGuessed => {\n      return prevGuessed.includes(Letter) ? prevGuessed : [...prevGuessed, Letter];\n    });\n  }\n  function CompareGuessed() {\n    for (let i = 0; i < SplitCurrentWord.length; i++) {\n      if (GuessedArray.includes(SplitCurrentWord[i]) && !CorrectLetters.includes(SplitCurrentWord[i])) {\n        setCorrectLetters(prevCorr => {\n          return [...prevCorr, SplitCurrentWord[i]];\n        });\n      }\n    }\n  }\n  const WordDisplay = SplitCurrentWord.map(prevWord => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Letters\",\n      children: prevWord.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  });\n  const AlphabetButtons = AlphabetArray.map(preAlph => {\n    if (CorrectLetters.includes(preAlph)) {\n      /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"green\"\n        },\n        onClick: () => HandleLetterButtonClick(preAlph),\n        className: \"AlphabetLetters\",\n        children: preAlph.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    } else if (!CorrectLetters.includes(preAlph) && GuessedArray.includes(preAlph)) {\n      /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"red\"\n        },\n        onClick: () => HandleLetterButtonClick(preAlph),\n        className: \"AlphabetLetters\",\n        children: preAlph.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => HandleLetterButtonClick(preAlph),\n      className: \"AlphabetLetters\",\n      children: preAlph.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  });\n  const LanguagesDisplay = LanguagesObjectArray.map(prevLang => {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Languages\",\n      style: {\n        backgroundColor: prevLang.backgroundColor,\n        color: prevLang.color\n      },\n      children: prevLang.name\n    }, prevLang.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameResultStatus\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You Win!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDF89Congratulations\\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LanguagesCollection\",\n      children: LanguagesDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WordToGuess\",\n      children: WordDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AlphabetButtons\",\n      children: AlphabetButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"NewGameButton\",\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"n2jphdYBq8ihqvt6drIIpcUdvPc=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["languages","React","jsxDEV","_jsxDEV","Main","_s","LanguagesObjectArray","setLanguages","useState","CurrentWord","setCurrentWord","GuessedArray","setGuessed","CorrectLetters","setCorrectLetters","SplitCurrentWord","split","AlphabetArray","console","log","HandleLetterButtonClick","Letter","prevGuessed","includes","CompareGuessed","i","length","prevCorr","WordDisplay","map","prevWord","className","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","AlphabetButtons","preAlph","style","backgroundColor","onClick","LanguagesDisplay","prevLang","color","name","_c","$RefreshReg$"],"sources":["/Users/Aashiq/Desktop/Projects/HangManButNo/src/Main.jsx"],"sourcesContent":["import { languages } from './languages.js';\nimport React from 'react'\n\nexport default function Main(){\n\nconst [LanguagesObjectArray, setLanguages] = React.useState(languages)\nconst [CurrentWord, setCurrentWord] = React.useState(\"React\")\nconst [GuessedArray, setGuessed] = React.useState([])\nconst [CorrectLetters, setCorrectLetters] = React.useState([])\n\n\nconst SplitCurrentWord = CurrentWord.split(\"\");\nconst AlphabetArray = \"abcdefghijklmnopqrstuvwxyz\".split(\"\")\n\nconsole.log(GuessedArray)\n\nfunction HandleLetterButtonClick(Letter){\n    setGuessed(prevGuessed => {\n        return prevGuessed.includes(Letter) ? prevGuessed : [...prevGuessed, Letter]\n    })\n}\n\nfunction CompareGuessed(){\n    for(let i = 0; i<SplitCurrentWord.length; i++){\n        if(GuessedArray.includes(SplitCurrentWord[i]) && !CorrectLetters.includes(SplitCurrentWord[i])){\n            setCorrectLetters(prevCorr => {\n                return [...prevCorr, SplitCurrentWord[i]]\n            })\n        }\n    }\n}\n\n\n\nconst WordDisplay = SplitCurrentWord.map(prevWord => {\n    return <span className='Letters'>{prevWord.toUpperCase()}</span>\n})\n\nconst AlphabetButtons = AlphabetArray.map(preAlph => {\n\n    if(CorrectLetters.includes(preAlph)){\n        <button style={{backgroundColor: \"green\"}} onClick={() => HandleLetterButtonClick(preAlph)} className='AlphabetLetters'>{preAlph.toUpperCase()}</button>\n    }\n    else if(!CorrectLetters.includes(preAlph) && GuessedArray.includes(preAlph)){\n        <button style={{backgroundColor: \"red\"}} onClick={() => HandleLetterButtonClick(preAlph)} className='AlphabetLetters'>{preAlph.toUpperCase()}</button>\n    }\n    return ( \n        <button onClick={() => HandleLetterButtonClick(preAlph)} className='AlphabetLetters'>{preAlph.toUpperCase()}</button>\n    )\n})\n\nconst LanguagesDisplay = LanguagesObjectArray.map(prevLang => {\n    return <h2 className=\"Languages\" key={prevLang.name} style={{backgroundColor: prevLang.backgroundColor, color: prevLang.color}}>{prevLang.name}</h2>\n})\n\n    return(\n        <main>\n            <div className=\"GameResultStatus\">\n                <h2>You Win!</h2>\n                <p>ðŸŽ‰CongratulationsðŸŽ‰</p>\n            </div>\n            <div className=\"LanguagesCollection\">\n                {LanguagesDisplay}\n            </div>\n            <div className='WordToGuess'>\n                {WordDisplay}\n            </div>\n            <div className='AlphabetButtons'>\n                {AlphabetButtons}\n            </div>\n            <button className='NewGameButton'>New Game</button>\n        </main>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}