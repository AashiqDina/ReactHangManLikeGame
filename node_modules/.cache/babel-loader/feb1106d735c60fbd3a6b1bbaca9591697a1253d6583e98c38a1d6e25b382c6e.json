{"ast":null,"code":"var _jsxFileName = \"/Users/Aashiq/Desktop/Projects/HangManButNo/src/Main.jsx\",\n  _s = $RefreshSig$();\nimport { languages } from './languages.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [LanguagesObjectArray, setLanguages] = React.useState(languages);\n  const [CurrentWord, setCurrentWord] = React.useState(\"React\");\n  const [GuessedArray, setGuessed] = React.useState([]);\n  const SplitCurrentWord = CurrentWord.split(\"\");\n  const AlphabetArray = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n  console.log(GuessedArray);\n  function HandleLetterButtonClick(Letter) {\n    setGuessed(GuessedArray.map(prevGuessed => prevGuessed).push(Letter));\n  }\n  const WordDisplay = SplitCurrentWord.map(prevWord => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Letters\",\n      children: prevWord.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  });\n  const AlphabetButtons = AlphabetArray.map(preAlph => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => HandleLetterButtonClick(preAlph),\n      className: \"AlphabetLetters\",\n      children: preAlph.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  });\n  const LanguagesDisplay = LanguagesObjectArray.map(prevLang => {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Languages\",\n      style: {\n        backgroundColor: prevLang.backgroundColor,\n        color: prevLang.color\n      },\n      children: prevLang.name\n    }, prevLang.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameResultStatus\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You Win!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDF89Congratulations\\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LanguagesCollection\",\n      children: LanguagesDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WordToGuess\",\n      children: WordDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AlphabetButtons\",\n      children: AlphabetButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"NewGameButton\",\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"5fp1wQChWnEITAJked6uHqR3lQw=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["languages","React","jsxDEV","_jsxDEV","Main","_s","LanguagesObjectArray","setLanguages","useState","CurrentWord","setCurrentWord","GuessedArray","setGuessed","SplitCurrentWord","split","AlphabetArray","console","log","HandleLetterButtonClick","Letter","map","prevGuessed","push","WordDisplay","prevWord","className","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","AlphabetButtons","preAlph","onClick","LanguagesDisplay","prevLang","style","backgroundColor","color","name","_c","$RefreshReg$"],"sources":["/Users/Aashiq/Desktop/Projects/HangManButNo/src/Main.jsx"],"sourcesContent":["import { languages } from './languages.js';\nimport React from 'react'\n\nexport default function Main(){\n\nconst [LanguagesObjectArray, setLanguages] = React.useState(languages)\nconst [CurrentWord, setCurrentWord] = React.useState(\"React\")\nconst [GuessedArray, setGuessed] = React.useState([])\n\nconst SplitCurrentWord = CurrentWord.split(\"\");\nconst AlphabetArray = \"abcdefghijklmnopqrstuvwxyz\".split(\"\")\n\nconsole.log(GuessedArray)\n\nfunction HandleLetterButtonClick(Letter){\n    setGuessed(GuessedArray.map(prevGuessed => (\n        prevGuessed\n    )).push(Letter))\n}\n\nconst WordDisplay = SplitCurrentWord.map(prevWord => {\n    return <span className='Letters'>{prevWord.toUpperCase()}</span>\n})\n\nconst AlphabetButtons = AlphabetArray.map(preAlph => {\n    return <button onClick={() => HandleLetterButtonClick(preAlph)} className='AlphabetLetters'>{preAlph.toUpperCase()}</button>\n})\n\nconst LanguagesDisplay = LanguagesObjectArray.map(prevLang => {\n    return <h2 className=\"Languages\" key={prevLang.name} style={{backgroundColor: prevLang.backgroundColor, color: prevLang.color}}>{prevLang.name}</h2>\n})\n\n    return(\n        <main>\n            <div className=\"GameResultStatus\">\n                <h2>You Win!</h2>\n                <p>ðŸŽ‰CongratulationsðŸŽ‰</p>\n            </div>\n            <div className=\"LanguagesCollection\">\n                {LanguagesDisplay}\n            </div>\n            <div className='WordToGuess'>\n                {WordDisplay}\n            </div>\n            <div className='AlphabetButtons'>\n                {AlphabetButtons}\n            </div>\n            <button className='NewGameButton'>New Game</button>\n        </main>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}